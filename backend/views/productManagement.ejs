<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý sản phẩm</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }

        h1 {
            color: #343a40;
            font-weight: bold;
        }

        .table thead {
            background-color: #007bff;
            color: white;
        }

        .table tbody tr:nth-child(even) {
            background-color: #f1f1f1;
        }

        .btn-primary,
        .btn-success {
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .modal-header {
            background-color: #007bff;
            color: white;
        }

        .modal-footer button {
            transition: all 0.3s ease;
        }

        .modal-footer button:hover {
            transform: scale(1.05);
        }

        #addVariantBtn {
            background-color: #17a2b8;
            color: white;
        }

        #addVariantBtn:hover {
            background-color: #138496;
        }

        .form-control:focus {
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

        .action-buttons a,
        .action-buttons button {
            margin-right: 5px;
        }
    </style>
</head>

<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <a class="navbar-brand" href="/admin/dashboard">Admin Dashboard</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
            aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" href="/products">Quản lý sản phẩm</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/orders">Quản lý đơn hàng</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/coupons">Quản lý mã giảm giá</a>
                </li>
            </ul>
        </div>
    </nav>

    <div class="container mt-5">
        <h1 class="mb-4 text-center">Quản lý sản phẩm</h1>

        <!-- Button to open modal for adding a product -->
        <div class="d-flex justify-content-between mb-4">
            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addProductModal">
                <i class="bi bi-plus-circle"></i> Thêm sản phẩm mới
            </button>
            <button id="addCategoryBtn" class="btn btn-primary">
                <i class="bi bi-folder-plus"></i> Thêm danh mục
            </button>

        </div>

        <!-- Product table -->
        <div class="table-responsive">
            <table class="table table-bordered align-middle">
                <thead class="text-center">
                    <tr>
                        <th>Hình ảnh</th>
                        <th>Tên sản phẩm</th>
                        <th>Giá</th>
                        <th>Danh mục</th>
                        <th>Tồn kho</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    <% products.forEach(product=> { %>
                        <tr>
                            <td class="text-center">
                                <% if (product.images && product.images.length> 0) { %>
                                    <img src="<%= product.images[0] %>" alt="Product Image"
                                        style="width: 50px; height: 50px; object-fit: cover; border-radius: 5px;">
                                    <% } else { %>
                                        <img src="/path/to/placeholder-image.jpg" alt="No Image"
                                            style="width: 50px; height: 50px; object-fit: cover; border-radius: 5px;">
                                        <% } %>
                            </td>
                            <td>
                                <%= product.name %>
                            </td>
                            <td class="text-end">
                                <%= product.price.toLocaleString() %> VND
                            </td>
                            <td>
                                <%= product.category %>
                            </td>
                            <td class="text-center">
                                <% let totalStock=product.variants.reduce((sum, v)=> sum + v.stock, 0); %>
                                    <%= totalStock %>
                            </td>
                            <td class="text-center action-buttons">
                                <a href="javascript:void(0)" class="btn btn-warning btn-sm"
                                    onclick="openEditModal('<%= product._id %>')">
                                    <i class="bi bi-pencil-square"></i> Sửa
                                </a>
                                <form action="/products/delete/<%= product._id %>" method="POST" class="d-inline">
                                    <button type="button" class="btn btn-danger btn-sm"
                                        onclick="confirmDelete('<%= product._id %>')">
                                        <i class="bi bi-trash"></i> Xóa
                                    </button>
                                </form>
                            </td>
                        </tr>
                        <% }) %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Modal for adding a product -->
    <div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form method="POST" action="/products/add" enctype="multipart/form-data">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addProductModalLabel">Thêm sản phẩm mới</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="name" class="form-label">Tên sản phẩm</label>
                                <input type="text" class="form-control" id="name" name="name"
                                    value="<%= formData.name || '' %>" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="price" class="form-label">Giá</label>
                                <input type="number" class="form-control" id="price" name="price"
                                    value="<%= formData.price || '' %>" required>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="category" class="form-label">Danh mục</label>
                            <select class="form-select" id="category" name="category" required>
                                <option value="">Chọn danh mục</option>
                                <% if (categories && categories.length) { %>
                                    <% categories.forEach(category=> { %>
                                        <option value="<%= category.slug %>" <%=formData.category===category.slug
                                            ? 'selected' : '' %>>
                                            <%= category.name %>
                                        </option>
                                        <% }); %>
                                            <% } else { %>
                                                <option value="">Không có danh mục</option>
                                                <% } %>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Mô tả</label>
                            <textarea class="form-control" id="description" name="description"
                                rows="3"><%= formData.description || '' %></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="images" class="form-label">Hình ảnh</label>
                            <input type="file" class="form-control" id="images" name="images" multiple>
                        </div>
                        <div class="mb-3">
                            <label for="variants" class="form-label">Biến thể</label>
                            <div id="variantContainer">
                                <div class="row g-2 align-items-center">
                                    <div class="col-md-4">
                                        <label for="size" class="form-label">Size</label>
                                        <select class="form-select" name="variants[0][size]" required>
                                            <option value="">Chọn size</option>
                                            <% for (let i=4.0; i <=6.81; i +=0.1) { %>
                                                <option value="<%= i.toFixed(2) %>">
                                                    <%= i.toFixed(2) %>
                                                </option>
                                                <% } %>
                                        </select>
                                    </div>
                                    <div class="col-md-4">
                                        <label for="color" class="form-label">Màu</label>
                                        <select class="form-select" name="variants[0][color]" required>
                                            <option value="">Chọn màu</option>
                                            <% colors.forEach(color=> { %>
                                                <option value="<%= color %>">
                                                    <%= color %>
                                                </option>
                                                <% }) %>
                                        </select>
                                    </div>
                                    <div class="col-md-4">
                                        <label for="stock" class="form-label">Tồn kho</label>
                                        <input type="number" class="form-control" name="variants[0][stock]" min="0"
                                            required>
                                    </div>
                                </div>
                            </div>
                            <button type="button" class="btn btn-info mt-3" id="addVariantBtn">Thêm biến thể</button>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                        <button type="submit" class="btn btn-primary">Thêm sản phẩm</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal for editing a product -->
    <div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form method="POST" action="/products/edit/<%= editProduct ? editProduct._id : '' %>"
                    enctype="multipart/form-data" id="editProductForm">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="editName" class="form-label">Tên sản phẩm</label>
                            <input type="text" class="form-control" id="editName" name="name" required>
                        </div>
                        <div class="mb-3">
                            <label for="editPrice" class="form-label">Giá</label>
                            <input type="number" class="form-control" id="editPrice" name="price" required>
                        </div>
                        <div class="mb-3">
                            <label for="editCategory" class="form-label">Danh mục</label>
                            <select class="form-select" id="editCategory" name="category">
                                <% categories.forEach(category=> { %>
                                    <option value="<%= category.slug %>" <%=editProduct &&
                                        editProduct.category===category.slug ? 'selected' : '' %>>
                                        <%= category.name %>
                                    </option>
                                    <% }) %>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="editDescription" class="form-label">Mô tả</label>
                            <textarea class="form-control" id="editDescription" name="description" rows="3"></textarea>
                        </div>
                        <div id="editVariantContainer"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                        <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Modal for adding a category -->
    <div id="addCategoryModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form id="addCategoryForm" action="/products/categories/add" method="POST">
                    <div class="modal-header">
                        <h5 class="modal-title">Thêm danh mục sản phẩm</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="categoryName" class="form-label">Tên danh mục</label>
                            <input type="text" name="name" id="categoryName" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label for="categorySlug" class="form-label">Slug</label>
                            <input type="text" name="slug" id="categorySlug" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label for="categoryDescription" class="form-label">Mô tả</label>
                            <textarea name="description" id="categoryDescription" class="form-control"
                                rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Thêm</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteProductModal" tabindex="-1" aria-labelledby="deleteProductModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteProductModalLabel">Xác nhận xóa</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Bạn có thật sự muốn xoá sản phẩm này?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Không</button>
                    <button type="button" id="confirmDeleteButton" class="btn btn-danger">Có</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Success Toast -->
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1055;">
        <div id="successToast" class="toast align-items-center text-bg-success border-0" role="alert"
            aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    Sản phẩm đã được xóa thành công.
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                    aria-label="Close"></button>
            </div>
        </div>
    </div>

    <!-- Notification Modal -->
    <div class="modal fade" id="notificationModal" tabindex="-1" aria-labelledby="notificationModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="notificationModalLabel"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="notificationModalBody">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <script>
        function openEditModal(productId) {
            fetch(`/products/edit/${productId}`)
                .then(response => response.json())
                .then(data => {
                    const { product, categories, colors } = data;

                    // Điền thông tin sản phẩm cơ bản
                    document.getElementById('editName').value = product.name;
                    document.getElementById('editPrice').value = product.price;
                    document.getElementById('editCategory').value = product.category;
                    document.getElementById('editDescription').value = product.description;

                    // Hiển thị biến thể (variants)
                    const variantContainer = document.getElementById('editVariantContainer');
                    variantContainer.innerHTML = '';

                    product.variants.forEach((variant, index) => {
                        let sizeOptions = '';
                        for (let i = 4.0; i <= 6.81; i += 0.1) {
                            const size = i.toFixed(2);
                            sizeOptions += `<option value="${size}" ${variant.size === size ? 'selected' : ''}>${size}</option>`;
                        }

                        const colorOptions = colors.map(color =>
                            `<option value="${color}" ${variant.color === color ? 'selected' : ''}>${color}</option>`
                        ).join('');

                        variantContainer.innerHTML += `
                    <div class="row g-2 align-items-center mb-3">
                        <div class="col-md-4">
                            <label class="form-label">Size</label>
                            <select class="form-select" name="variants[${index}][size]" required>
                                <option value="">Chọn size</option>
                                ${sizeOptions}
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Màu</label>
                            <select class="form-select" name="variants[${index}][color]" required>
                                <option value="">Chọn màu</option>
                                ${colorOptions}
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Tồn kho</label>
                            <input type="number" class="form-control" name="variants[${index}][stock]" value="${variant.stock}" required>
                        </div>
                    </div>
                `;
                    });

                    // Cập nhật URL của form
                    document.getElementById('editProductForm').action = `/products/edit/${product._id}`;

                    // Hiển thị modal
                    const editModal = new bootstrap.Modal(document.getElementById('editProductModal'));
                    editModal.show();
                })
                .catch(error => console.error('Error loading product:', error));
        }

        document.getElementById('addCategoryBtn').addEventListener('click', () => {
            const addCategoryModal = new bootstrap.Modal(document.getElementById('addCategoryModal'));
            addCategoryModal.show();
        });


        document.getElementById('addCategoryForm').addEventListener('submit', async (event) => {
            event.preventDefault(); // Ngăn chặn form gửi theo cách thông thường

            const form = event.target;

            // Lấy dữ liệu từ form
            const formData = new FormData(form);
            const data = {
                name: formData.get('name'),
                slug: formData.get('slug'),
                description: formData.get('description'),
            };

            try {
                // Gửi yêu cầu POST để thêm danh mục
                const response = await fetch('/products/categories/add', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data),
                });

                if (response.ok) {
                    const newCategory = await response.json();

                    // Cập nhật giao diện (thêm danh mục mới vào dropdown)
                    const categorySelect = document.getElementById('category');
                    const newOption = document.createElement('option');
                    newOption.value = newCategory.slug;
                    newOption.textContent = newCategory.name;
                    categorySelect.appendChild(newOption);

                    // Reset form và đóng modal
                    form.reset();
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addCategoryModal'));
                    modal.hide();
                } else {
                    console.error('Failed to add category:', await response.text());
                }
            } catch (error) {
                console.error('Error adding category:', error);
            }
        });



        document.getElementById('addVariantBtn').addEventListener('click', () => {
            const variantContainer = document.getElementById('variantContainer');
            const variantIndex = variantContainer.children.length; // Tự động tăng chỉ số biến thể

            // Danh sách các option size
            let sizeOptions = '';
            for (let i = 4.0; i <= 6.81; i += 0.1) {
                const size = i.toFixed(2);
                sizeOptions += `<option value="${size}">${size}</option>`;
            }

            // Danh sách các option màu (dựa vào danh sách colors từ server)
            const colors = ['Red', 'Blue', 'Green', 'Yellow', 'Black', 'White', 'Pink', 'Purple', 'Brown', 'Orange'];
            const colorOptions = colors.map(color => `<option value="${color}">${color}</option>`).join('');

            // HTML của một dòng biến thể
            const variantHTML = `
                <div class="row g-2 align-items-center mb-3">
                    <div class="col-md-4">
                        <label class="form-label">Size</label>
                        <select class="form-select" name="variants[${variantIndex}][size]" required>
                            <option value="">Chọn size</option>
                            ${sizeOptions}
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Màu</label>
                        <select class="form-select" name="variants[${variantIndex}][color]" required>
                            <option value="">Chọn màu</option>
                            ${colorOptions}
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Tồn kho</label>
                        <input type="number" class="form-control" name="variants[${variantIndex}][stock]" min="0" required>
                    </div>
                </div>
            `;

            // Thêm dòng biến thể vào container
            variantContainer.insertAdjacentHTML('beforeend', variantHTML);
        });

        let productIdToDelete = null;

        // Show delete confirmation modal
        function confirmDelete(productId) {
            productIdToDelete = productId;
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteProductModal'));
            deleteModal.show();
        }

        // Handle deletion on confirmation
        document.getElementById('confirmDeleteButton').addEventListener('click', async () => {
            if (productIdToDelete) {
                try {
                    const response = await fetch(`/products/delete/${productIdToDelete}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (response.ok) {
                        // Close the delete confirmation modal
                        const deleteModal = bootstrap.Modal.getInstance(document.getElementById('deleteProductModal'));
                        deleteModal.hide();

                        // Show the success toast
                        const successToast = new bootstrap.Toast(document.getElementById('successToast'));
                        successToast.show();

                        // Optionally, refresh the page or dynamically update the UI
                        setTimeout(() => {
                            window.location.reload(); // Reload to reflect changes
                        }, 1500);
                    } else {
                        console.error('Failed to delete product');
                    }
                } catch (error) {
                    console.error('Error deleting product:', error);
                }
            }
        });


    </script>

    <!-- Notification -->
    <script>
        // Show notification modal
        function showNotification(title, message) {
            document.getElementById('notificationModalLabel').textContent = title;
            document.getElementById('notificationModalBody').textContent = message;
            
            const notificationModal = new bootstrap.Modal(document.getElementById('notificationModal'));
            notificationModal.show();
        }

        // Handle product addition
        document.querySelector('form[action="/products/add"]').addEventListener('submit', async (event) => {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);

            try {
                const response = await fetch(form.action, {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();
                if (result.success) {
                    showNotification('Success', result.message);
                    setTimeout(() => window.location.reload(), 1500);
                } else {
                    showNotification('Error', result.message);
                }
            } catch (error) {
                showNotification('Error', 'Failed to add product');
            }
        });

        // Handle product editing
        document.querySelector('form[action^="/products/edit/"]').addEventListener('submit', async (event) => {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);

            try {
                const response = await fetch(form.action, {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();
                if (result.success) {
                    showNotification('Success', result.message);
                    setTimeout(() => window.location.reload(), 1500);
                } else {
                    showNotification('Error', result.message);
                }
            } catch (error) {
                showNotification('Error', 'Failed to edit product');
            }
        });

        // Handle category addition
        // Handle category addition
        document.getElementById('addCategoryForm').addEventListener('submit', async (event) => {
            event.preventDefault();
            const form = event.target;

            // Get form data
            const formData = new FormData(form);
            const data = {
                name: formData.get('name'),
                slug: formData.get('slug'),
                description: formData.get('description'),
            };

            try {
                // Send POST request to add the category
                const response = await fetch('/products/categories/add', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data),
                });

                const result = await response.json();

                if (result.success) {
                    showNotification('Success', 'Category added successfully');
                    setTimeout(() => window.location.reload(), 1500); // Reload to reflect changes
                } else {
                    showNotification('Error', result.message); // Show specific error from the backend
                }
            } catch (error) {
                showNotification('Error', 'Failed to add category');
            }
        });


    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>